version: '3'


services:  
  minio:
    container_name: minio
    image: minio/minio:latest
    volumes:
      - "./data/minio:/data"
    ports:
      - "9000:9000"
      - "9001:9001"
    
    restart: always      
    environment:
      MINIO_ROOT_USER: "root"
      MINIO_ROOT_PASSWORD: "password"     

       
    command: server --console-address "0.0.0.0:9001" /data


  createbuckets:
    container_name: minio-init
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 root password;
      /usr/bin/mc mb myminio/tektome;
      /usr/bin/mc admin user add myminio tektome tektomeSecret;
      /usr/bin/mc admin policy attach myminio readwrite --user=tektome;
      exit 0;
      "

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    volumes:
      - "./data/qdrant/:/qdrant/storage"
    ports:
      - "6333:6333"
      - "6334:6334"
      
    restart: always      


  redis:
    image: redis:7.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/:/data
  

  tektome-celery-worker:
    image: tektome
    container_name: tektome-celery-worker
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - redis
      - qdrant
      - minio
      
    command: python vector_db_task.py


  tektome:
    image: tektome
    container_name: tektome
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env

    ports:
      - "8000:8000"

    depends_on:
      - redis
      - qdrant
      - minio
      - tektome-celery-worker
      
    command: uvicorn main:app --host 0.0.0.0




    