# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
      - 'tests/**'
      - 'main.py'
      - 'config.py'
      - 'Dockerfile.ci'
      - 'docker-compose-ci.yml'
      - 'vector_db_task.py'
      
  pull_request:
    branches: [ "main" ]
env:
  OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}} 
  IMAGE_NAME: tektome_rag
jobs:
  test:
    runs-on: ubuntu-22.04
    #runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.2' 

      - name: install black linter + formatter
        run: pip install black

      - name: Run lintter 
        run: python -m black --check .

      - name: Build the celery worker image with secret
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.ci
          platforms: linux/amd64
          tags: tektome
          secrets: |
            "openai_api_key=${{ secrets.OPENAI_API_KEY }}"

      - name: Run services
        run: docker compose -f docker-compose-ci.yml up minio createbuckets qdrant redis tektome-celery-worker -d 
      
      - name: Run pytest
        run: docker compose -f docker-compose-ci.yml up tektome-test --exit-code-from tektome-test

      - name: Remove docker container after test
        if: always()
        run: docker compose -f docker-compose-ci.yml down

  build_and_publish_docker:
    needs: [test]
    runs-on: ubuntu-22.04
    #runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION